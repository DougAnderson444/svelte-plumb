{"version":3,"file":"grabable-c450c91e.js","sources":["../../../../../../node_modules/@douganderson444/pointer-tracker/dist/PointerTracker.mjs","../../../../../../node_modules/nanoid/non-secure/index.js","../../../../../../src/lib/components/CursorMarker.svelte","../../../../../../node_modules/perfect-arrows/dist/perfect-arrows.esm.js","../../../../../../node_modules/svelte/motion/index.mjs","../../../../../../src/lib/directives/clickOutside.js","../../../../../../src/lib/components/Link.svelte","../../../../../../src/lib/components/Links.svelte","../../../../../../src/lib/components/Highlighter.svelte","../../../../../../src/lib/utils.js","../../../../../../src/lib/constants.js","../../../../../../src/lib/components/Canvas.svelte","../../../../../../src/lib/components/Delegate.svelte","../../../../../../src/lib/components/DemoDelegated.svelte","../../../../../../src/lib/directives/grabable.js"],"sourcesContent":["class Pointer {\r\n    constructor(nativePointer) {\r\n        /** Unique ID for this pointer */\r\n        this.id = -1;\r\n        this.nativePointer = nativePointer;\r\n        this.pageX = nativePointer.pageX;\r\n        this.pageY = nativePointer.pageY;\r\n        this.clientX = nativePointer.clientX;\r\n        this.clientY = nativePointer.clientY;\r\n        if (self.Touch && nativePointer instanceof Touch) {\r\n            this.id = nativePointer.identifier;\r\n        }\r\n        else if (isPointerEvent(nativePointer)) {\r\n            // is PointerEvent\r\n            this.id = nativePointer.pointerId;\r\n        }\r\n    }\r\n    /**\r\n     * Returns an expanded set of Pointers for high-resolution inputs.\r\n     */\r\n    getCoalesced() {\r\n        if ('getCoalescedEvents' in this.nativePointer) {\r\n            const events = this.nativePointer\r\n                .getCoalescedEvents()\r\n                .map((p) => new Pointer(p));\r\n            // Firefox sometimes returns an empty list here. I'm not sure it's doing the right thing.\r\n            // https://github.com/w3c/pointerevents/issues/409\r\n            if (events.length > 0)\r\n                return events;\r\n            // Otherwise, Firefox falls through…\r\n        }\r\n        return [this];\r\n    }\r\n}\r\nconst isPointerEvent = (event) => 'pointerId' in event;\r\nconst isTouchEvent = (event) => 'changedTouches' in event;\r\nconst noop = () => { };\r\n/**\r\n * Track pointers across a particular element\r\n */\r\nclass PointerTracker {\r\n    /**\r\n     * Track pointers across a particular element\r\n     *\r\n     * @param element Element to monitor.\r\n     * @param options\r\n     */\r\n    constructor(_element, { start = () => true, move = noop, end = noop, rawUpdates = false, avoidPointerEvents = false, eventListenerOptions = { capture: false, passive: false, once: false }, } = {}) {\r\n        this._element = _element;\r\n        /**\r\n         * State of the tracked pointers when they were pressed/touched.\r\n         */\r\n        this.startPointers = [];\r\n        /**\r\n         * Latest state of the tracked pointers. Contains the same number of pointers, and in the same\r\n         * order as this.startPointers.\r\n         */\r\n        this.currentPointers = [];\r\n        /**\r\n         * Firefox has a bug where touch-based pointer events have a `buttons` of 0, when this shouldn't\r\n         * happen. https://bugzilla.mozilla.org/show_bug.cgi?id=1729440\r\n         *\r\n         * Usually we treat `buttons === 0` as no-longer-pressed. This set allows us to exclude these\r\n         * buggy Firefox events.\r\n         */\r\n        this._excludeFromButtonsCheck = new Set();\r\n        /**\r\n         * Listener for mouse/pointer starts.\r\n         *\r\n         * @param event This will only be a MouseEvent if the browser doesn't support pointer events.\r\n         */\r\n        this._pointerStart = (event) => {\r\n            if (isPointerEvent(event) && event.buttons === 0) {\r\n                // This is the buggy Firefox case. See _excludeFromButtonsCheck.\r\n                this._excludeFromButtonsCheck.add(event.pointerId);\r\n            }\r\n            else if (!(event.buttons & 1 /* LeftMouseOrTouchOrPenDown */)) {\r\n                return;\r\n            }\r\n            const pointer = new Pointer(event);\r\n            // If we're already tracking this pointer, ignore this event.\r\n            // This happens with mouse events when multiple buttons are pressed.\r\n            if (this.currentPointers.some((p) => p.id === pointer.id))\r\n                return;\r\n            if (!this._triggerPointerStart(pointer, event))\r\n                return;\r\n            // Add listeners for additional events.\r\n            // The listeners may already exist, but no harm in adding them again.\r\n            if (isPointerEvent(event)) {\r\n                const capturingElement = event.target && 'setPointerCapture' in event.target\r\n                    ? event.target\r\n                    : this._element;\r\n                capturingElement.setPointerCapture(event.pointerId);\r\n                this._element.addEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move, this._eventListenerOptions);\r\n                this._element.addEventListener('pointerup', this._pointerEnd, this._eventListenerOptions);\r\n                this._element.addEventListener('pointercancel', this._pointerEnd, this._eventListenerOptions);\r\n            }\r\n            else {\r\n                // MouseEvent\r\n                window.addEventListener('mousemove', this._move);\r\n                window.addEventListener('mouseup', this._pointerEnd);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for touchstart.\r\n         * Only used if the browser doesn't support pointer events.\r\n         */\r\n        this._touchStart = (event) => {\r\n            for (const touch of Array.from(event.changedTouches)) {\r\n                this._triggerPointerStart(new Pointer(touch), event);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for pointer/mouse/touch move events.\r\n         */\r\n        this._move = (event) => {\r\n            if (!isTouchEvent(event) &&\r\n                (!isPointerEvent(event) ||\r\n                    !this._excludeFromButtonsCheck.has(event.pointerId)) &&\r\n                event.buttons === 0 /* None */) {\r\n                // This happens in a number of buggy cases where the browser failed to deliver a pointerup\r\n                // or pointercancel. If we see the pointer moving without any buttons down, synthesize an end.\r\n                // https://github.com/w3c/pointerevents/issues/407\r\n                // https://github.com/w3c/pointerevents/issues/408\r\n                this._pointerEnd(event);\r\n                return;\r\n            }\r\n            const previousPointers = this.currentPointers.slice();\r\n            const changedPointers = isTouchEvent(event)\r\n                ? Array.from(event.changedTouches).map((t) => new Pointer(t))\r\n                : [new Pointer(event)];\r\n            const trackedChangedPointers = [];\r\n            for (const pointer of changedPointers) {\r\n                const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n                if (index === -1)\r\n                    continue; // Not a pointer we're tracking\r\n                trackedChangedPointers.push(pointer);\r\n                this.currentPointers[index] = pointer;\r\n            }\r\n            if (trackedChangedPointers.length === 0)\r\n                return;\r\n            this._moveCallback(previousPointers, trackedChangedPointers, event);\r\n        };\r\n        /**\r\n         * Call the end callback for this pointer.\r\n         *\r\n         * @param pointer Pointer\r\n         * @param event Related event\r\n         */\r\n        this._triggerPointerEnd = (pointer, event) => {\r\n            // Main button still down?\r\n            // With mouse events, you get a mouseup per mouse button, so the left button might still be down.\r\n            if (!isTouchEvent(event) &&\r\n                event.buttons & 1 /* LeftMouseOrTouchOrPenDown */) {\r\n                return false;\r\n            }\r\n            const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n            // Not a pointer we're interested in?\r\n            if (index === -1)\r\n                return false;\r\n            this.currentPointers.splice(index, 1);\r\n            this.startPointers.splice(index, 1);\r\n            this._excludeFromButtonsCheck.delete(pointer.id);\r\n            // The event.type might be a 'move' event due to workarounds for weird mouse behaviour.\r\n            // See _move for details.\r\n            const cancelled = !(event.type === 'mouseup' ||\r\n                event.type === 'touchend' ||\r\n                event.type === 'pointerup');\r\n            this._endCallback(pointer, event, cancelled);\r\n            return true;\r\n        };\r\n        /**\r\n         * Listener for mouse/pointer ends.\r\n         *\r\n         * @param event This will only be a MouseEvent if the browser doesn't support pointer events.\r\n         */\r\n        this._pointerEnd = (event) => {\r\n            if (!this._triggerPointerEnd(new Pointer(event), event))\r\n                return;\r\n            if (isPointerEvent(event)) {\r\n                if (this.currentPointers.length)\r\n                    return;\r\n                this._element.removeEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move);\r\n                this._element.removeEventListener('pointerup', this._pointerEnd);\r\n                this._element.removeEventListener('pointercancel', this._pointerEnd);\r\n            }\r\n            else {\r\n                // MouseEvent\r\n                window.removeEventListener('mousemove', this._move);\r\n                window.removeEventListener('mouseup', this._pointerEnd);\r\n            }\r\n        };\r\n        /**\r\n         * Listener for touchend.\r\n         * Only used if the browser doesn't support pointer events.\r\n         */\r\n        this._touchEnd = (event) => {\r\n            for (const touch of Array.from(event.changedTouches)) {\r\n                this._triggerPointerEnd(new Pointer(touch), event);\r\n            }\r\n        };\r\n        this._startCallback = start;\r\n        this._moveCallback = move;\r\n        this._endCallback = end;\r\n        this._rawUpdates = rawUpdates && 'onpointerrawupdate' in window;\r\n        this._eventListenerOptions = eventListenerOptions;\r\n        // Add listeners\r\n        if (self.PointerEvent && !avoidPointerEvents) {\r\n            this._element.addEventListener('pointerdown', this._pointerStart, this._eventListenerOptions);\r\n        }\r\n        else {\r\n            this._element.addEventListener('mousedown', this._pointerStart, this._eventListenerOptions);\r\n            this._element.addEventListener('touchstart', this._touchStart, this._eventListenerOptions);\r\n            this._element.addEventListener('touchmove', this._move, this._eventListenerOptions);\r\n            this._element.addEventListener('touchend', this._touchEnd, this._eventListenerOptions);\r\n            this._element.addEventListener('touchcancel', this._touchEnd, this._eventListenerOptions);\r\n        }\r\n    }\r\n    /**\r\n     * Remove all listeners.\r\n     */\r\n    stop() {\r\n        this._element.removeEventListener('pointerdown', this._pointerStart);\r\n        this._element.removeEventListener('mousedown', this._pointerStart);\r\n        this._element.removeEventListener('touchstart', this._touchStart);\r\n        this._element.removeEventListener('touchmove', this._move);\r\n        this._element.removeEventListener('touchend', this._touchEnd);\r\n        this._element.removeEventListener('touchcancel', this._touchEnd);\r\n        this._element.removeEventListener(this._rawUpdates ? 'pointerrawupdate' : 'pointermove', this._move);\r\n        this._element.removeEventListener('pointerup', this._pointerEnd);\r\n        this._element.removeEventListener('pointercancel', this._pointerEnd);\r\n        window.removeEventListener('mousemove', this._move);\r\n        window.removeEventListener('mouseup', this._pointerEnd);\r\n    }\r\n    /**\r\n     * Call the start callback for this pointer, and track it if the user wants.\r\n     *\r\n     * @param pointer Pointer\r\n     * @param event Related event\r\n     * @returns Whether the pointer is being tracked.\r\n     */\r\n    _triggerPointerStart(pointer, event) {\r\n        if (!this._startCallback(pointer, event))\r\n            return false;\r\n        this.currentPointers.push(pointer);\r\n        this.startPointers.push(pointer);\r\n        return true;\r\n    }\r\n}\n\nexport { PointerTracker as default };\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\texport let marker;\r\n\texport let id;\r\n\texport let left;\r\n\texport let top;\r\n\r\n\tlet offsetWidth;\r\n\tlet offsetHeight;\r\n\r\n\t$: x = left - offsetWidth / 2;\r\n\t$: y = top - offsetHeight / 2;\r\n</script>\r\n\r\n<div\r\n\tbind:this={marker}\r\n\t{id}\r\n\tclass=\"absolute\"\r\n\tstyle=\"left:{x}px; top:{y}px;\"\r\n\tbind:offsetWidth\r\n\tbind:offsetHeight\r\n>\r\n\t<slot>\r\n\t\t<div\r\n\t\t\tclass=\"h-4 w-4 p-8 rounded-full shadow-xl opacity-80 select-none border-[2em] border-pink-500/50\"\r\n\t\t/>\r\n\t</slot>\r\n</div>\r\n","var PI = Math.PI;\n/**\r\n * Modulate a value between two ranges.\r\n * @param value\r\n * @param rangeA from [low, high]\r\n * @param rangeB to [low, high]\r\n * @param clamp\r\n */\n\nfunction modulate(value, rangeA, rangeB, clamp) {\n  if (clamp === void 0) {\n    clamp = false;\n  }\n\n  var fromLow = rangeA[0],\n      fromHigh = rangeA[1];\n  var toLow = rangeB[0],\n      toHigh = rangeB[1];\n  var result = toLow + (value - fromLow) / (fromHigh - fromLow) * (toHigh - toLow);\n\n  if (clamp === true) {\n    if (toLow < toHigh) {\n      if (result < toLow) {\n        return toLow;\n      }\n\n      if (result > toHigh) {\n        return toHigh;\n      }\n    } else {\n      if (result > toLow) {\n        return toLow;\n      }\n\n      if (result < toHigh) {\n        return toHigh;\n      }\n    }\n  }\n\n  return result;\n}\n/**\r\n * Rotate a point around a center.\r\n * @param x The x-axis coordinate of the point.\r\n * @param y The y-axis coordinate of the point.\r\n * @param cx The x-axis coordinate of the point to rotate round.\r\n * @param cy The y-axis coordinate of the point to rotate round.\r\n * @param angle The distance (in radians) to rotate.\r\n */\n\nfunction rotatePoint(x, y, cx, cy, angle) {\n  var s = Math.sin(angle);\n  var c = Math.cos(angle);\n  var px = x - cx;\n  var py = y - cy;\n  var nx = px * c - py * s;\n  var ny = px * s + py * c;\n  return [nx + cx, ny + cy];\n}\n/**\r\n * Get the distance between two points.\r\n * @param x0 The x-axis coordinate of the first point.\r\n * @param y0 The y-axis coordinate of the first point.\r\n * @param x1 The x-axis coordinate of the second point.\r\n * @param y1 The y-axis coordinate of the second point.\r\n */\n\nfunction getDistance(x0, y0, x1, y1) {\n  return Math.hypot(y1 - y0, x1 - x0);\n}\n/**\r\n * Get an angle (radians) between two points.\r\n * @param x0 The x-axis coordinate of the first point.\r\n * @param y0 The y-axis coordinate of the first point.\r\n * @param x1 The x-axis coordinate of the second point.\r\n * @param y1 The y-axis coordinate of the second point.\r\n */\n\nfunction getAngle(x0, y0, x1, y1) {\n  return Math.atan2(y1 - y0, x1 - x0);\n}\n/**\r\n * Move a point in an angle by a distance.\r\n * @param x0\r\n * @param y0\r\n * @param a angle (radians)\r\n * @param d distance\r\n */\n\nfunction projectPoint(x0, y0, a, d) {\n  return [Math.cos(a) * d + x0, Math.sin(a) * d + y0];\n}\n/**\r\n * Get a point between two points.\r\n * @param x0 The x-axis coordinate of the first point.\r\n * @param y0 The y-axis coordinate of the first point.\r\n * @param x1 The x-axis coordinate of the second point.\r\n * @param y1 The y-axis coordinate of the second point.\r\n * @param d Normalized\r\n */\n\nfunction getPointBetween(x0, y0, x1, y1, d) {\n  if (d === void 0) {\n    d = 0.5;\n  }\n\n  return [x0 + (x1 - x0) * d, y0 + (y1 - y0) * d];\n}\n/**\r\n * Get the sector of an angle (e.g. quadrant, octant)\r\n * @param a The angle to check.\r\n * @param s The number of sectors to check.\r\n */\n\nfunction getSector(a, s) {\n  if (s === void 0) {\n    s = 8;\n  }\n\n  return Math.floor(s * (0.5 + a / (PI * 2) % s));\n}\n/**\r\n * Get a normal value representing how close two points are from being at a 45 degree angle.\r\n * @param x0 The x-axis coordinate of the first point.\r\n * @param y0 The y-axis coordinate of the first point.\r\n * @param x1 The x-axis coordinate of the second point.\r\n * @param y1 The y-axis coordinate of the second point.\r\n */\n\nfunction getAngliness(x0, y0, x1, y1) {\n  return Math.abs((x1 - x0) / 2 / ((y1 - y0) / 2));\n}\n/**\r\n * Check whether two rectangles will collide (overlap).\r\n * @param x0 The x-axis coordinate of the first rectangle.\r\n * @param y0 The y-axis coordinate of the first rectangle.\r\n * @param w0 The width of the first rectangle.\r\n * @param h0 The height of the first rectangle.\r\n * @param x1 The x-axis coordinate of the second rectangle.\r\n * @param y1 The y-axis coordinate of the second rectangle.\r\n * @param w1 The width of the second rectangle.\r\n * @param h1 The height of the second rectangle.\r\n */\n\nfunction doRectanglesCollide(x0, y0, w0, h0, x1, y1, w1, h1) {\n  return !(x0 >= x1 + w1 || x1 >= x0 + w0 || y0 >= y1 + h1 || y1 >= y0 + h0);\n}\n/**\r\n * Get the point(s) where a line segment intersects a circle.\r\n * @param cx The x-axis coordinate of the circle's center.\r\n * @param cy The y-axis coordinate of the circle's center.\r\n * @param r The circle's radius.\r\n * @param x0 The x-axis coordinate of the segment's starting point.\r\n * @param y0 The y-axis coordinate of ththe segment's ending point.\r\n * @param x1 The delta-x of the ray.\r\n * @param y1 The delta-y of the ray.\r\n */\n\nfunction getSegmentCircleIntersections(cx, cy, r, x0, y0, x1, y1) {\n  var b,\n      c,\n      d,\n      u1,\n      u2,\n      ret,\n      retP1,\n      retP2,\n      v1 = [x1 - x0, y1 - y0],\n      v2 = [x0 - cx, y0 - cy];\n  b = v1[0] * v2[0] + v1[1] * v2[1];\n  c = 2 * (v1[0] * v1[0] + v1[1] * v1[1]);\n  b *= -2;\n  d = Math.sqrt(b * b - 2 * c * (v2[0] * v2[0] + v2[1] * v2[1] - r * r));\n\n  if (isNaN(d)) {\n    // no intercept\n    return [];\n  }\n\n  u1 = (b - d) / c; // these represent the unit distance of point one and two on the line\n\n  u2 = (b + d) / c;\n  retP1 = []; // return points\n\n  retP2 = [];\n  ret = []; // return array\n\n  if (u1 <= 1 && u1 >= 0) {\n    // add point if on the line segment\n    retP1[0] = x0 + v1[0] * u1;\n    retP1[1] = y0 + v1[1] * u1;\n    ret[0] = retP1;\n  }\n\n  if (u2 <= 1 && u2 >= 0) {\n    // second add point if on the line segment\n    retP2[0] = x0 + v1[0] * u2;\n    retP2[1] = y0 + v1[1] * u2;\n    ret[ret.length] = retP2;\n  }\n\n  return ret;\n}\n/**\r\n * Normalize an angle (in radians)\r\n * @param radians The radians quantity to normalize.\r\n */\n\nfunction normalizeAngle(radians) {\n  return radians - PI * 2 * Math.floor(radians / (PI * 2));\n}\n/**\r\n * Get the point at which a ray intersects a segment.\r\n * @param x The x-axis coordinate of the ray's origin.\r\n * @param y The y-axis coordinate of the ray's origin.\r\n * @param dx The x-axis delta of the angle.\r\n * @param dy The y-axis delta of the angle.\r\n * @param x0 The x-axis coordinate of the segment's start point.\r\n * @param y0 The y-axis coordinate of the segment's start point.\r\n * @param x1 The x-axis coordinate of the segment's end point.\r\n * @param y1 The y-axis coordinate of the segment's end point.\r\n */\n\nfunction getRaySegmentIntersection(x, y, dx, dy, x0, y0, x1, y1) {\n  var r, s, d;\n\n  if (dy * (x1 - x0) !== dx * (y1 - y0)) {\n    d = dx * (y1 - y0) - dy * (x1 - x0);\n\n    if (d !== 0) {\n      r = ((y - y0) * (x1 - x0) - (x - x0) * (y1 - y0)) / d;\n      s = ((y - y0) * dx - (x - x0) * dy) / d;\n\n      if (r >= 0 && s >= 0 && s <= 1) {\n        return [x + r * dx, y + r * dy];\n      }\n    }\n  }\n\n  return undefined;\n}\n/**\r\n * Get the normalized delta (x and y) for an angle.\r\n * @param angle The angle in radians\r\n */\n\nfunction getDelta(angle) {\n  return [Math.cos(angle), Math.sin(angle)];\n}\nfunction getIntermediate(angle) {\n  return Math.abs(Math.abs(angle % (PI / 2)) - PI / 4) / (PI / 4);\n}\n/**\r\n * Get a line between two rounded rectangles.\r\n * @param x0\r\n * @param y0\r\n * @param w0\r\n * @param h0\r\n * @param r0\r\n * @param x1\r\n * @param y1\r\n * @param w1\r\n * @param h1\r\n * @param r1\r\n */\n\nfunction getLineBetweenRoundedRectangles(x0, y0, w0, h0, r0, x1, y1, w1, h1, r1) {\n  var cx0 = x0 + w0 / 2,\n      cy0 = y0 + h0 / 2,\n      cx1 = x1 + w1 / 2,\n      cy1 = y1 + h1 / 2,\n      _ref3 = getRayRoundedRectangleIntersection(cx0, cy0, cx1 - cx0, cy1 - cy0, x0, y0, w0, h0, r0) || [[cx0, cy0]],\n      _ref3$ = _ref3[0],\n      di0x = _ref3$[0],\n      di0y = _ref3$[1],\n      _ref4 = getRayRoundedRectangleIntersection(cx1, cy1, cx0 - cx1, cy0 - cy1, x1, y1, w1, h1, r1) || [[cx1, cy1]],\n      _ref4$ = _ref4[0],\n      di1x = _ref4$[0],\n      di1y = _ref4$[1];\n\n  return [di0x, di0y, di1x, di1y];\n}\n/**\r\n * Get the intersection points between a ray and a rectangle with rounded corners.\r\n * @param ox The x-axis coordinate of the ray's origin.\r\n * @param oy The y-axis coordinate of the ray's origin.\r\n * @param dx The delta-x of the ray.\r\n * @param dy The delta-y of the ray.\r\n * @param x The x-axis coordinate of the rectangle.\r\n * @param y The y-axis coordinate of the rectangle.\r\n * @param w The width of the rectangle.\r\n * @param h The height of the rectangle.\r\n * @param r The corner radius of the rectangle.\r\n */\n\nfunction getRayRoundedRectangleIntersection(ox, oy, dx, dy, x, y, w, h, r) {\n  var mx = x + w,\n      my = y + h,\n      rx = x + r - 1,\n      ry = y + r - 1,\n      mrx = x + w - r + 1,\n      mry = y + h - r + 1;\n  var segments = [[x, mry, x, ry], [rx, y, mrx, y], [mx, ry, mx, mry], [mrx, my, rx, my]];\n  var corners = [[rx, ry, Math.PI, Math.PI * 1.5], [mrx, ry, Math.PI * 1.5, Math.PI * 2], [mrx, mry, 0, Math.PI * 0.5], [rx, mry, Math.PI * 0.5, Math.PI]];\n  var points = [];\n  segments.forEach(function (segment, i) {\n    var px0 = segment[0],\n        py0 = segment[1],\n        px1 = segment[2],\n        py1 = segment[3];\n    var _corners$i2 = corners[i],\n        cx = _corners$i2[0],\n        cy = _corners$i2[1],\n        as = _corners$i2[2],\n        ae = _corners$i2[3];\n    var intersections = getRayCircleIntersection(cx, cy, r, ox, oy, dx, dy);\n    intersections && intersections.filter(function (pt) {\n      var pointAngle = normalizeAngle(getAngle(cx, cy, pt[0], pt[1]));\n      return pointAngle > as && pointAngle < ae;\n    }).forEach(function (pt) {\n      return points.push(pt);\n    });\n    var segmentInt = getRaySegmentIntersection(ox, oy, dx, dy, px0, py0, px1, py1);\n\n    if (!!segmentInt) {\n      points.push(segmentInt);\n    }\n  });\n  return points;\n}\nfunction getRectangleSegmentIntersectedByRay(x, y, w, h, ox, oy, dx, dy) {\n  return getRectangleSegments(x, y, w, h).find(function (_ref5) {\n    var sx0 = _ref5[0],\n        sy0 = _ref5[1],\n        sx1 = _ref5[2],\n        sy1 = _ref5[3];\n    return getRaySegmentIntersection(ox, oy, dx, dy, sx0, sy0, sx1, sy1);\n  });\n}\nfunction getRectangleSegments(x, y, w, h) {\n  return [[x, y, x + w, y], [x + w, y, x + w, y + h], [x + w, y + h, x, y + h], [x, y + h, x, y]];\n}\nfunction getRayCircleIntersection(cx, cy, r, ox, oy, dx, dy) {\n  // This is a shitty hack\n  return getSegmentCircleIntersections(cx, cy, r, ox, oy, dx * 999999, dy * 999999);\n}\n\n/**\r\n * getArrow\r\n * Get the points for a linking line between two points.\r\n * @description Draw an arrow between two points.\r\n * @param x0 The x position of the \"from\" point.\r\n * @param y0 The y position of the \"from\" point.\r\n * @param x1 The x position of the \"to\" point.\r\n * @param y1 The y position of the \"to\" point.\r\n * @param options Additional options for computing the line.\r\n * @returns [sx, sy, cx, cy, e1, e2, ae, as, ac]\r\n * @example\r\n * const arrow = getArrow(0, 0, 100, 200, {\r\n    bow: 0\r\n    stretch: .5\r\n    stretchMin: 0\r\n    stretchMax: 420\r\n    padStart: 0\r\n    padEnd: 0\r\n    flip: false\r\n    straights: true\r\n * })\r\n *\r\n * const [\r\n *  startX, startY,\r\n *  controlX, controlY,\r\n *  endX, endY,\r\n *  endAngle,\r\n *  startAngle,\r\n *  controlAngle\r\n *  ] = arrow\r\n */\n\nfunction getArrow(x0, y0, x1, y1, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$bow = _options.bow,\n      bow = _options$bow === void 0 ? 0 : _options$bow,\n      _options$stretch = _options.stretch,\n      stretch = _options$stretch === void 0 ? 0.5 : _options$stretch,\n      _options$stretchMin = _options.stretchMin,\n      stretchMin = _options$stretchMin === void 0 ? 0 : _options$stretchMin,\n      _options$stretchMax = _options.stretchMax,\n      stretchMax = _options$stretchMax === void 0 ? 420 : _options$stretchMax,\n      _options$padStart = _options.padStart,\n      padStart = _options$padStart === void 0 ? 0 : _options$padStart,\n      _options$padEnd = _options.padEnd,\n      padEnd = _options$padEnd === void 0 ? 0 : _options$padEnd,\n      _options$flip = _options.flip,\n      flip = _options$flip === void 0 ? false : _options$flip,\n      _options$straights = _options.straights,\n      straights = _options$straights === void 0 ? true : _options$straights;\n  var angle = getAngle(x0, y0, x1, y1);\n  var dist = getDistance(x0, y0, x1, y1);\n  var angliness = getAngliness(x0, y0, x1, y1); // Step 0 ⤜⤏ Should the arrow be straight?\n\n  if (dist < (padStart + padEnd) * 2 || bow === 0 && stretch === 0 || straights && [0, 1, Infinity].includes(angliness) // 45 degree angle\n  ) {\n    // ⤜⤏ Arrow is straight! Just pad start and end points.\n    // Padding distances\n    var ps = Math.max(0, Math.min(dist - padStart, padStart));\n    var pe = Math.max(0, Math.min(dist - ps, padEnd)); // Move start point toward end point\n\n    var _projectPoint = projectPoint(x0, y0, angle, ps),\n        _px = _projectPoint[0],\n        _py = _projectPoint[1]; // Move end point toward start point\n\n\n    var _projectPoint2 = projectPoint(x1, y1, angle + Math.PI, pe),\n        _px2 = _projectPoint2[0],\n        _py2 = _projectPoint2[1]; // Get midpoint between new points\n\n\n    var _getPointBetween = getPointBetween(_px, _py, _px2, _py2, 0.5),\n        _mx = _getPointBetween[0],\n        _my = _getPointBetween[1];\n\n    return [_px, _py, _mx, _my, _px2, _py2, angle, angle, angle];\n  } // ⤜⤏ Arrow is an arc!\n  // Is the arc clockwise or counterclockwise?\n\n\n  var rot = (getSector(angle) % 2 === 0 ? 1 : -1) * (flip ? -1 : 1); // Calculate how much the line should \"bow\" away from center\n\n  var arc = bow + modulate(dist, [stretchMin, stretchMax], [1, 0], true) * stretch; // Step 1 ⤜⤏ Find padded points.\n  // Get midpoint.\n\n  var _getPointBetween2 = getPointBetween(x0, y0, x1, y1, 0.5),\n      mx = _getPointBetween2[0],\n      my = _getPointBetween2[1]; // Get control point.\n\n\n  var _getPointBetween3 = getPointBetween(x0, y0, x1, y1, 0.5 - arc),\n      cx = _getPointBetween3[0],\n      cy = _getPointBetween3[1];\n\n  var _rotatePoint = rotatePoint(cx, cy, mx, my, Math.PI / 2 * rot);\n\n  cx = _rotatePoint[0];\n  cy = _rotatePoint[1];\n  // Get padded start point.\n  var a0 = getAngle(x0, y0, cx, cy);\n\n  var _projectPoint3 = projectPoint(x0, y0, a0, padStart),\n      px0 = _projectPoint3[0],\n      py0 = _projectPoint3[1]; // Get padded end point.\n\n\n  var a1 = getAngle(x1, y1, cx, cy);\n\n  var _projectPoint4 = projectPoint(x1, y1, a1, padEnd),\n      px1 = _projectPoint4[0],\n      py1 = _projectPoint4[1]; // Step 2  ⤜⤏ Find start and end angles.\n  // Start angle\n\n\n  var as = getAngle(cx, cy, x0, y0); // End angle\n\n  var ae = getAngle(cx, cy, x1, y1); // Step 3 ⤜⤏ Find control point for padded points.\n  // Get midpoint between padded start / end points.\n\n  var _getPointBetween4 = getPointBetween(px0, py0, px1, py1, 0.5),\n      mx1 = _getPointBetween4[0],\n      my1 = _getPointBetween4[1]; // Get control point for padded start / end points.\n\n\n  var _getPointBetween5 = getPointBetween(px0, py0, px1, py1, 0.5 - arc),\n      cx1 = _getPointBetween5[0],\n      cy1 = _getPointBetween5[1];\n\n  var _rotatePoint2 = rotatePoint(cx1, cy1, mx1, my1, Math.PI / 2 * rot);\n\n  cx1 = _rotatePoint2[0];\n  cy1 = _rotatePoint2[1];\n\n  // Finally, average the two control points.\n  var _getPointBetween6 = getPointBetween(cx, cy, cx1, cy1, 0.5),\n      cx2 = _getPointBetween6[0],\n      cy2 = _getPointBetween6[1];\n\n  return [px0, py0, cx2, cy2, px1, py1, ae, as, angle];\n}\n\nvar PI$1 = Math.PI;\nvar PI2 = PI$1 * 2;\nvar MIN_ANGLE = PI$1 / 24;\n/**\r\n * getArrowBetweenBoxes\r\n * Get the points for a linking line between two boxes.\r\n * @param x0 The x-axis coordinate of the first box.\r\n * @param y0 The y-axis coordinate of the first box.\r\n * @param w0 The width of the first box.\r\n * @param h0 The height of the first box.\r\n * @param x1 The x-axis coordinate of the second box.\r\n * @param y1 The y-axis coordinate of the second box.\r\n * @param w1 The width of the second box.\r\n * @param h1 The height of the second box.\r\n * @param options\r\n */\n\nfunction getBoxToBoxArrow(x0, y0, w0, h0, x1, y1, w1, h1, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var sx, sy, ex, ey;\n  var _options = options,\n      _options$bow = _options.bow,\n      bow = _options$bow === void 0 ? 0 : _options$bow,\n      _options$stretch = _options.stretch,\n      stretch = _options$stretch === void 0 ? 0.25 : _options$stretch,\n      _options$stretchMin = _options.stretchMin,\n      stretchMin = _options$stretchMin === void 0 ? 50 : _options$stretchMin,\n      _options$stretchMax = _options.stretchMax,\n      stretchMax = _options$stretchMax === void 0 ? 420 : _options$stretchMax,\n      _options$padStart = _options.padStart,\n      padStart = _options$padStart === void 0 ? 0 : _options$padStart,\n      _options$padEnd = _options.padEnd,\n      padEnd = _options$padEnd === void 0 ? 20 : _options$padEnd,\n      _options$flip = _options.flip,\n      flip = _options$flip === void 0 ? false : _options$flip,\n      _options$straights = _options.straights,\n      straights = _options$straights === void 0 ? true : _options$straights;\n  var px0 = x0 - padStart,\n      py0 = y0 - padStart,\n      pw0 = w0 + padStart * 2,\n      ph0 = h0 + padStart * 2,\n      px1 = x1 - padEnd,\n      py1 = y1 - padEnd,\n      pw1 = w1 + padEnd * 2,\n      ph1 = h1 + padEnd * 2,\n      cx0 = x0 + w0 / 2,\n      cy0 = y0 + h0 / 2,\n      cx1 = x1 + w1 / 2,\n      cy1 = y1 + h1 / 2; // Angle between centers\n\n  var angle = normalizeAngle(getAngle(cx0, cy0, cx1, cy1)); // Distance between centers\n\n  var distance = getDistance(cx0, cy0, cx1, cy1); // Perfect overlap, no arrow.\n\n  if (distance === 0) {\n    var _sx = cx0,\n        _sy = py0;\n    var _ex = cx1,\n        _ey = py1;\n\n    var _getPointBetween = getPointBetween(_sx, _sy, _ex, _ey, 0.5),\n        cx = _getPointBetween[0],\n        cy = _getPointBetween[1];\n\n    var ca = getAngle(_sx, _sy, _ex, _ey);\n    return [_sx, _sy, cx, cy, _ex, _ey, ca, ca, ca];\n  } // Rotation of the arrow, clockwise or anticlockwise\n\n\n  var rot = (getSector(angle) % 2 === 0 ? -1 : 1) * (flip ? -1 : 1); // How cardinal is the angle? 0 = 45deg, 1 = 90deg\n\n  var card = getIntermediate(angle);\n  if (card < 1 && card > 0.85) card = 0.99; // Are the boxes colliding / overlapping?\n\n  var isColliding = doRectanglesCollide(px0, py0, pw0, ph0, px1, py1, pw1, ph1); // Direct line between boxes\n\n  var _getLineBetweenRounde = getLineBetweenRoundedRectangles(px0, py0, pw0, ph0, padStart, px1, py1, pw1, ph1, padEnd),\n      dix0 = _getLineBetweenRounde[0],\n      diy0 = _getLineBetweenRounde[1],\n      dix1 = _getLineBetweenRounde[2],\n      diy1 = _getLineBetweenRounde[3]; // Length of the direct line between boxes\n\n\n  var distanceBetween = getDistance(dix0, diy0, dix1, diy1);\n  /* ------------- RETURN A STRAIGHT ARROW ------------ */\n  // Should we just draw a straight line?\n\n  if (!isColliding && straights && card % 0.5 === 0) {\n    var _getPointBetween2 = getPointBetween(dix0, diy0, dix1, diy1, 0.5),\n        mpdx = _getPointBetween2[0],\n        mpdy = _getPointBetween2[1];\n\n    return [dix0, diy0, mpdx, mpdy, dix1, diy1, angle, angle - PI$1, angle];\n  }\n  /* -------------- RETURN A CURVED ARROW ------------- */\n  // How much are the two boxes overlapping?\n\n\n  var overlapEffect = isColliding ? modulate(distanceBetween, [0, distance], [0, 1], true) : 0; // How far away are the two boxes?\n\n  var distEffect = 1 - distanceBetween / distance; // How much should the stretch impact the arc?\n\n  var stretchEffect = modulate(distanceBetween, [stretchMin, stretchMax], [1, 0], true); // What should the curved line's arc be?\n\n  var arc = bow + stretchEffect * stretch; // How much should the angle's intermediacy (45degree-ness) affect the angle?\n\n  var angleOffset = modulate(card * card, // a better curve here?\n  [0, 1], [PI$1 * 0.125, 0], true);\n  var distOffset = isColliding ? PI$1 * 0.5 * card : modulate(distEffect, // a better curve here?\n  [0.75, 1], [0, PI$1 * 0.5], true) * card;\n  var combinedOffset = distOffset + angleOffset * (isColliding ? 1 - overlapEffect : 1);\n  /* ----------------- STARTING POINT ----------------- */\n  // Angle of the first box\n\n  var finalAngle0 = overlapEffect >= 0.5 ? angle + PI$1 * rot : angle + Math.max(MIN_ANGLE, combinedOffset) * rot; // Deltas of starting angle\n\n  var _getDelta = getDelta(+(finalAngle0 % PI2).toPrecision(3)),\n      dx0 = _getDelta[0],\n      dy0 = _getDelta[1]; // Get ray intersection with rounded rectangle\n\n\n  var _getRayRoundedRectang = getRayRoundedRectangleIntersection(cx0, cy0, dx0, dy0, px0, py0, pw0, ph0, padStart),\n      _getRayRoundedRectang2 = _getRayRoundedRectang[0],\n      tsx = _getRayRoundedRectang2[0],\n      tsy = _getRayRoundedRectang2[1]; // Get midpoint of startingintersected segment\n\n\n  var startSeg = getRectangleSegmentIntersectedByRay(px0, py0, pw0, ph0, cx0, cy0, dx0, dy0);\n  if (!startSeg) throw Error; // Find start point (quarter way between segment midpoint and ray intersection)\n\n  var ssx0 = startSeg[0],\n      ssy0 = startSeg[1],\n      ssx1 = startSeg[2],\n      ssy1 = startSeg[3];\n\n  var _getPointBetween3 = getPointBetween(ssx0, ssy0, ssx1, ssy1, 0.5),\n      smpx = _getPointBetween3[0],\n      smpy = _getPointBetween3[1];\n\n  var _getPointBetween4 = getPointBetween(tsx, tsy, smpx, smpy, isColliding ? Math.max(overlapEffect, 0.15) : 0.15);\n\n  sx = _getPointBetween4[0];\n  sy = _getPointBetween4[1];\n  arc *= 1 + (Math.max(-2, Math.min(distEffect, 2)) * card - overlapEffect) / 2;\n\n  if (isColliding) {\n    arc = arc < 0 ? Math.min(arc, -0.5) : Math.max(arc, 0.5);\n  }\n  /* ------------------ ENDING POINT ------------------ */\n\n\n  if (overlapEffect >= 0.5) {\n    // If overlapping, use the same angle as the start\n    var rayAngle = getAngle(cx0, cy0, smpx, smpy);\n\n    var _getDelta2 = getDelta(rayAngle),\n        dx1 = _getDelta2[0],\n        dy1 = _getDelta2[1];\n\n    var _getRayRoundedRectang3 = getRayRoundedRectangleIntersection(cx1, cy1, dx1, dy1, px1, py1, pw1, ph1, padEnd);\n\n    var _getRayRoundedRectang4 = _getRayRoundedRectang3[0];\n    ex = _getRayRoundedRectang4[0];\n    ey = _getRayRoundedRectang4[1];\n  } else {\n    // Calculate an angle based on distance, overlap and intermediacy\n    var distOffset1 = modulate(distEffect, [0.75, 1], [0, 1], true);\n    var overlapEffect1 = isColliding ? modulate(overlapEffect, [0, 1], [0, PI$1 / 8], true) : 0;\n    var cardEffect1 = modulate(card * distOffset1, [0, 1], [0, PI$1 / 16], true);\n\n    var _combinedOffset = distEffect * (PI$1 / 12) + (cardEffect1 + overlapEffect1) + (distOffset + angleOffset) / 2;\n\n    var finalAngle1 = overlapEffect >= 0.5 ? angle + PI$1 * rot : angle + PI$1 - Math.max(_combinedOffset, MIN_ANGLE) * rot; // Deltas of ending angle\n\n    var _getDelta3 = getDelta(+(finalAngle1 % PI2).toPrecision(3)),\n        _dx = _getDelta3[0],\n        _dy = _getDelta3[1]; // Get ray intersection with ending rounded rectangle\n\n\n    var _getRayRoundedRectang5 = getRayRoundedRectangleIntersection(cx1, cy1, _dx, _dy, px1, py1, pw1, ph1, padEnd),\n        _getRayRoundedRectang6 = _getRayRoundedRectang5[0],\n        tex = _getRayRoundedRectang6[0],\n        tey = _getRayRoundedRectang6[1]; // Get midpoint of ending intersected segment\n\n\n    var endSeg = getRectangleSegmentIntersectedByRay(px1, py1, pw1, ph1, cx1, cy1, _dx, _dy);\n    if (!endSeg) throw Error;\n    var sex0 = endSeg[0],\n        sey0 = endSeg[1],\n        sex1 = endSeg[2],\n        sey1 = endSeg[3];\n\n    var _getPointBetween5 = getPointBetween(sex0, sey0, sex1, sey1, 0.5),\n        empx = _getPointBetween5[0],\n        empy = _getPointBetween5[1];\n\n    var _getPointBetween6 = getPointBetween(tex, tey, empx, empy, 0.25 + overlapEffect * 0.25);\n\n    ex = _getPointBetween6[0];\n    ey = _getPointBetween6[1];\n  }\n  /* ------------------- DRAW ARROWS ------------------ */\n  // Get midpoints.\n\n\n  var _getPointBetween7 = getPointBetween(sx, sy, ex, ey, 0.5),\n      mx1 = _getPointBetween7[0],\n      my1 = _getPointBetween7[1];\n\n  var _getPointBetween8 = getPointBetween(sx, sy, ex, ey, Math.max(-1, Math.min(1, 0.5 + arc)) // Clamped to 2\n  ),\n      tix = _getPointBetween8[0],\n      tiy = _getPointBetween8[1]; // Rotate them (these are our two potential corners)\n\n\n  var _rotatePoint = rotatePoint(tix, tiy, mx1, my1, PI$1 / 2 * rot),\n      cixA = _rotatePoint[0],\n      ciyA = _rotatePoint[1];\n\n  var _rotatePoint2 = rotatePoint(tix, tiy, mx1, my1, PI$1 / 2 * -rot),\n      cixB = _rotatePoint2[0],\n      ciyB = _rotatePoint2[1]; // If we're colliding, pick the furthest corner from the end point.\n\n\n  var _ref = isColliding && getDistance(cixA, ciyA, cx1, cy1) < getDistance(cixB, ciyB, cx1, cy1) ? [cixB, ciyB] : [cixA, ciyA],\n      cix = _ref[0],\n      ciy = _ref[1]; // Start and end angles\n\n\n  var as = getAngle(cix, ciy, sx, sy);\n  var ae = getAngle(cix, ciy, ex, ey);\n  return [sx, sy, cix, ciy, ex, ey, ae, as, getAngle(sx, sy, ex, ey)];\n}\n\nexport { getArrow, getBoxToBoxArrow };\n//# sourceMappingURL=perfect-arrows.esm.js.map\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","export function clickOutside(node, { enabled: initialEnabled, handleUnselect }) {\r\n\tconst handleOutsideClick = ({ target }) => {\r\n\t\tif (node !== target && node.parentElement != target.parentElement && !node.contains(target)) {\r\n\t\t\thandleUnselect();\r\n\t\t}\r\n\t};\r\n\r\n\tfunction update({ enabled }) {\r\n\t\tif (enabled) {\r\n\t\t\twindow.addEventListener('click', handleOutsideClick);\r\n\t\t} else {\r\n\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t}\r\n\t}\r\n\r\n\tupdate({ enabled: initialEnabled });\r\n\treturn {\r\n\t\tupdate,\r\n\t\tdestroy() {\r\n\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t}\r\n\t};\r\n}\r\n","<script>\r\n\t// @ts-nocheck\r\n\t// https://github.com/Rich-Harris/svelte-d3-arc-demo/blob/master/src/Viz.svelte\r\n\t// https://github.com/d3/d3-shape/blob/v3.1.0/README.md#_link\r\n\r\n\timport { onMount, createEventDispatcher } from 'svelte';\r\n\timport { getBoxToBoxArrow } from 'perfect-arrows';\r\n\timport { tweened } from 'svelte/motion';\r\n\timport { clickOutside } from '../directives/clickOutside';\r\n\r\n\texport let link;\r\n\texport let scale;\r\n\r\n\texport let strokeColor = link?.strokeColor;\r\n\texport let strokeWidth = 1;\r\n\texport let arrowColor = 'green';\r\n\texport let strokeOpacity = '0.3';\r\n\texport let groupStrokeOpacity = '0.1';\r\n\texport let groupStrokeColor = 'white';\r\n\texport let textStartOffset = 20; // %\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet initialStrokeWidth = strokeWidth;\r\n\r\n\tlet stroke;\r\n\tlet selected = false;\r\n\tlet mounted = false;\r\n\r\n\tonMount(() => {\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\tlet d, pointer;\r\n\tlet options = {\r\n\t\tbow: 0.05,\r\n\t\tstretch: 0.5,\r\n\t\tstretchMin: 10,\r\n\t\tstretchMax: 200,\r\n\t\tpadStart: 0,\r\n\t\tpadEnd: 15,\r\n\t\tflip: false,\r\n\t\tstraights: true\r\n\t};\r\n\tlet x0, y0, w0, h0, x1, y1, w1, h1;\r\n\tlet sx, sy, cx, cy, ex, ey, ae, as, ac;\r\n\r\n\t$: if (link) genArrow(link);\r\n\r\n\tfunction genArrow(link) {\r\n\t\tlet sourceEl = document.getElementById(link.source.id);\r\n\t\tlet targetEl = document.getElementById(link.target.id);\r\n\t\t// get closest data-canvas to source and target\r\n\t\tlet canvasEl = sourceEl.closest('[data-canvas]');\r\n\r\n\t\tif (!sourceEl || !targetEl) return;\r\n\r\n\t\tlet source = getCoords(sourceEl);\r\n\t\tlet target = getCoords(targetEl);\r\n\t\tlet canvas = getCoords(canvasEl);\r\n\r\n\t\tx0 = (source.left - canvas.left) / scale;\r\n\t\ty0 = (source.top - canvas.top) / scale;\r\n\t\tx1 = (target.left - canvas.left) / scale;\r\n\t\ty1 = (target.top - canvas.top) / scale;\r\n\r\n\t\tw0 = (source.right - source.left) / scale;\r\n\t\th0 = (source.bottom - source.top) / scale;\r\n\t\tw1 = (target.right - target.left) / scale;\r\n\t\th1 = (target.bottom - target.top) / scale;\r\n\r\n\t\tconst arrow = getBoxToBoxArrow(x0, y0, w0, h0, x1, y1, w1, h1, options);\r\n\t\t[sx, sy, cx, cy, ex, ey, ae, as, ac] = arrow;\r\n\r\n\t\td = `M${sx},${sy} Q${cx},${cy} ${ex},${ey}`;\r\n\t\tlet endAngleAsDegrees = ae * (180 / Math.PI);\r\n\t\tpointer = `translate(${ex},${ey}) rotate(${endAngleAsDegrees})`;\r\n\t}\r\n\r\n\t// Get document coordinates of an element\r\n\tfunction getCoords(elem) {\r\n\t\tlet box = elem.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\ttop: box.top + window.pageYOffset,\r\n\t\t\tright: box.right + window.pageXOffset,\r\n\t\t\tbottom: box.bottom + window.pageYOffset,\r\n\t\t\tleft: box.left + window.pageXOffset\r\n\t\t};\r\n\t}\r\n\tfunction handleMouseOver(e) {\r\n\t\tselected = true;\r\n\t\tstrokeWidth = initialStrokeWidth * 20; // jump\r\n\t}\r\n\tfunction handleMouseOut(e) {\r\n\t\tstroke = tweened(strokeWidth, {\r\n\t\t\tduration: 1000\r\n\t\t});\r\n\t\t$stroke = initialStrokeWidth; // shrink\r\n\t}\r\n\r\n\tfunction handleUnselect(e) {\r\n\t\tselected = false;\r\n\t}\r\n\r\n\t$: if ($stroke > initialStrokeWidth) {\r\n\t\tstrokeWidth = $stroke;\r\n\t}\r\n</script>\r\n\r\n{#if link && mounted}\r\n\t<g stroke={groupStrokeColor} stroke-opacity={groupStrokeOpacity}>\r\n\t\t<path\r\n\t\t\tstyle=\"pointer-events: stroke; user-select: none; outline: none;\"\r\n\t\t\t{d}\r\n\t\t\tid={link.id}\r\n\t\t\tstroke-width={strokeWidth}\r\n\t\t\tstroke={strokeColor}\r\n\t\t\tfill=\"none\"\r\n\t\t\tstroke-linecap=\"round\"\r\n\t\t\tstroke-opacity={strokeOpacity}\r\n\t\t\tstroke-dasharray=\"4\"\r\n\t\t\ton:click={() => (selected = !selected)}\r\n\t\t\ton:keypress={() => (selected = !selected)}\r\n\t\t\ton:mouseover={handleMouseOver}\r\n\t\t\ton:mouseout={handleMouseOut}\r\n\t\t\ton:focus={handleMouseOver}\r\n\t\t\ton:blur={handleMouseOut}\r\n\t\t\tuse:clickOutside={{ enabled: selected, handleUnselect }}\r\n\t\t/>\r\n\t\t<!-- Always have text left to right (English) -->\r\n\t\t{#if sx < ex}\r\n\t\t\t<text>\r\n\t\t\t\t<textPath xlink:href=\"#{link.id}\" startOffset={textStartOffset + '%'}>\r\n\t\t\t\t\t<tspan fill=\"black\">{link?.opts?.label?.enabled ? link?.opts?.label?.value : ''}</tspan>\r\n\t\t\t\t</textPath>\r\n\t\t\t</text>\r\n\t\t{:else}\r\n\t\t\t<text x={cx} y={cy}>\r\n\t\t\t\t<tspan fill=\"black\">{link?.opts?.label?.enabled ? link?.opts?.label?.value : ''}</tspan>\r\n\t\t\t</text>\r\n\t\t{/if}\r\n\t\t<!-- Optional endpoint Components -->\r\n\t\t<slot name=\"startPoint\" {sx} {sy} {ex} {ey} {as}>\r\n\t\t\t<!-- default to plain circle -->\r\n\t\t\t<circle cx={sx} cy={sy} r={4} />\r\n\t\t</slot>\r\n\t\t<slot name=\"endPoint\" {sx} {sy} {ex} {ey} {pointer}>\r\n\t\t\t<!-- Default if no named slot endPoint included in Parent component -->\r\n\t\t\t{#if pointer}\r\n\t\t\t\t<!-- Arrow Pointer -->\r\n\t\t\t\t<polygon points=\"0,-6 12,0, 0,6\" transform={pointer} fill={arrowColor} />\r\n\t\t\t{/if}\r\n\t\t</slot>\r\n\t\t{#if selected}\r\n\t\t\t<!-- Draw an unfilled svg circle -->\r\n\t\t\t<circle cx={ex} cy={ey} r={12} fill=\"none\" stroke=\"blue\" />\r\n\t\t\t<!-- Draw a red delete \"x\" at cx, cy with stroke opacity 0.6-->\r\n\t\t\t<foreignObject\r\n\t\t\t\tclass=\"overflow-visible pointer-events-auto relative\"\r\n\t\t\t\tx={cx}\r\n\t\t\t\ty={cy}\r\n\t\t\t\twidth=\"1\"\r\n\t\t\t\theight=\"1\"\r\n\t\t\t>\r\n\t\t\t\t<button\r\n\t\t\t\t\ton:click={() => dispatch('removeLink', link.id)}\r\n\t\t\t\t\tclass=\"w-fit h-fit font-mono text-red-500 text-2xl cursor-pointer select-none\"\r\n\t\t\t\t\tstyle=\"font-family: 'Luckiest Guy';\"\r\n\t\t\t\t\tstyle:transform=\"translate(180deg)\"\r\n\t\t\t\t>\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</foreignObject>\r\n\t\t{/if}\r\n\t</g>\r\n{/if}\r\n\r\n<style>\r\n\ttext {\r\n\t\tfont-family: arrows;\r\n\t\tfont-size: 1.5em;\r\n\t\tfill: grey;\r\n\t\tdominant-baseline: central;\r\n\t}\r\n\r\n\ttspan {\r\n\t\tfont-family: 'Luckiest Guy', cursive;\r\n\t\tfont-size: 0.5em;\r\n\t\t/* font-family: Impact; */\r\n\t\tdominant-baseline: ideographic;\r\n\t}\r\n\r\n\t/* @font-face {\r\n\t\tfont-family: arrows;\r\n\t\tsrc: url(arrows.woff);\r\n\t} */\r\n\r\n\t@font-face {\r\n\t\tfont-family: 'Luckiest Guy';\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tsrc: url(https://fonts.gstatic.com/s/luckiestguy/v17/_gP_1RrxsjcxVyin9l9n_j2hTd52.woff2)\r\n\t\t\tformat('woff2');\r\n\t\tunicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,\r\n\t\t\tU+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\t// https://github.com/Rich-Harris/svelte-d3-arc-demo/blob/master/src/Viz.svelte\r\n\t// https://github.com/d3/d3-shape/blob/v3.1.0/README.md#_link\r\n\timport { onMount } from 'svelte';\r\n\timport Link from './Link.svelte';\r\n\r\n\texport let links;\r\n\texport let scale;\r\n\r\n\t// some defaults\r\n\texport let strokeColor = 'currentColor';\r\n\texport let strokeWidth = 1;\r\n\texport let arrowColor = 'currentColor';\r\n\r\n\texport let strokeOpacity = '0.3';\r\n\r\n\texport let groupStrokeOpacity = '0.1';\r\n\texport let groupStrokeColor = 'white';\r\n\r\n\texport let textStartOffset = 20; // %\r\n\r\n\tlet mounted;\r\n\r\n\tonMount(() => {\r\n\t\tmounted = true;\r\n\t});\r\n</script>\r\n\r\n{#if mounted && links && links.length > 0}\r\n\t<svg style=\"pointer-events: none; overflow: visible;\">\r\n\t\t{#each links as link (link.id)}\r\n\t\t\t{#if link && mounted}\r\n\t\t\t\t<Link\r\n\t\t\t\t\t{link}\r\n\t\t\t\t\t{strokeColor}\r\n\t\t\t\t\t{strokeWidth}\r\n\t\t\t\t\t{arrowColor}\r\n\t\t\t\t\t{strokeOpacity}\r\n\t\t\t\t\t{groupStrokeOpacity}\r\n\t\t\t\t\t{groupStrokeColor}\r\n\t\t\t\t\t{textStartOffset}\r\n\t\t\t\t\t{scale}\r\n\t\t\t\t\ton:removeLink\r\n\t\t\t\t>\r\n\t\t\t\t\t<svelte:fragment slot=\"startPoint\" let:sx let:sy let:ex let:ey let:as>\r\n\t\t\t\t\t\t{#if link?.source?.startPoint?.component}\r\n\t\t\t\t\t\t\t<!-- foreignObject alows us to put HTML inside an SVG element -->\r\n\t\t\t\t\t\t\t<foreignObject\r\n\t\t\t\t\t\t\t\tstyle:overflow=\"visible\"\r\n\t\t\t\t\t\t\t\tstyle:position=\"relative\"\r\n\t\t\t\t\t\t\t\tstyle:pointer-events=\"auto\"\r\n\t\t\t\t\t\t\t\tx={sx}\r\n\t\t\t\t\t\t\t\ty={sy}\r\n\t\t\t\t\t\t\t\twidth=\"1\"\r\n\t\t\t\t\t\t\t\theight=\"1\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<svelte:component this={link.source.startPoint.component} {sx} {sy} {as} />\r\n\t\t\t\t\t\t\t</foreignObject>\r\n\t\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t\t<!-- default to plain circle -->\r\n\t\t\t\t\t\t\t<circle cx={sx} cy={sy} r={4} />\r\n\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t</svelte:fragment>\r\n\t\t\t\t\t<svelte:fragment slot=\"endPoint\" let:sx let:sy let:ex let:ey let:as let:pointer>\r\n\t\t\t\t\t\t{#if link?.source?.endPoint?.component}\r\n\t\t\t\t\t\t\t<!-- foreignObject alows us to put HTML inside an SVG element -->\r\n\t\t\t\t\t\t\t<foreignObject\r\n\t\t\t\t\t\t\t\tclass=\"overflow-visible pointer-events-auto relative\"\r\n\t\t\t\t\t\t\t\tx={sx}\r\n\t\t\t\t\t\t\t\ty={sy}\r\n\t\t\t\t\t\t\t\twidth=\"1\"\r\n\t\t\t\t\t\t\t\theight=\"1\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<svelte:component this={link.source.endPoint.component} {sx} {sy} {ex} {ey} {as} />\r\n\t\t\t\t\t\t\t</foreignObject>\r\n\t\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t\t<!-- Default if no named slot endPoint included in Parent component -->\r\n\t\t\t\t\t\t\t{#if pointer}\r\n\t\t\t\t\t\t\t\t<!-- Arrow Pointer -->\r\n\t\t\t\t\t\t\t\t<polygon points=\"0,-6 12,0, 0,6\" transform={pointer} fill={arrowColor} />\r\n\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t</svelte:fragment>\r\n\t\t\t\t</Link>\r\n\t\t\t{/if}\r\n\t\t{/each}\r\n\t</svg>\r\n{/if}\r\n\r\n<style>\r\n\tsvg {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tfloat: left;\r\n\t\tstroke-width: 5;\r\n\t\t/* z-index: -1; */\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpointer-events: stroke;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\texport let node;\r\n\texport let zoneSize = 2;\r\n\texport let highlight = false; // export makes it possible to set externally from the touch listener\r\n\r\n\tlet dot;\r\n\r\n\t// OVERLAY on center of parent node\r\n\t$: top = dot ? -dot.offsetHeight / 2 + node.offsetHeight / 2 : 0;\r\n\t$: left = dot ? -dot.offsetWidth / 2 + node.offsetWidth / 2 : 0;\r\n\r\n\t// move the dot underneath the node its highlighting in the DOM, so events bubble easily\r\n\t$: if (dot) node.insertAdjacentElement('beforeend', dot);\r\n\r\n\t// if node has a z-index, set dot z-index minus one so it's below the node, if node has no z-index, set it to 2\r\n\t// $: if (dot) dot.style.zIndex = node.style.zIndex - 1;\r\n</script>\r\n\r\n<svelte:window\r\n\ton:resize={(e) => {\r\n\t\ttop = top;\r\n\t\tleft = left;\r\n\t}}\r\n/>\r\n\r\n<!-- Need to get the position of the node that was passed in\r\n    then set this style to same as node -->\r\n\r\n<div\r\n\tid={node.id + '--highlighter'}\r\n\tdata-highlighter=\"true\"\r\n\tclass=\"absolute\r\n\tborder-[{zoneSize + 'em'}] \r\n\tmd:border-[{zoneSize / 2 + 'em'}] \r\n\tborder-transparent rounded-full p-0 m-0 \"\r\n\tstyle=\"top: {top}px; left: {left}px;\"\r\n\tbind:this={dot}\r\n\ton:mouseover={(e) => {\r\n\t\thighlight = true; // actually this is redundant because overHighlighter in Canvas.svelte, but it's here for clarity\r\n\t}}\r\n\ton:mouseleave={(e) => {\r\n\t\thighlight = false;\r\n\t}}\r\n\ton:focus={(e) => {\r\n\t\thighlight = true;\r\n\t}}\r\n\ton:blur={(e) => {\r\n\t\thighlight = false;\r\n\t}}\r\n>\r\n\t{#if highlight}\r\n\t\t<slot>\r\n\t\t\t<div\r\n\t\t\t\tstyle=\"transform: translate(-50%, -50%);\"\r\n\t\t\t\tclass=\"absolute \r\n\t\t\t\tborder-[{zoneSize + 'em'}] \r\n\t\t\t\tmd:border-[{zoneSize / 2 + 'em'}] \r\n\t\t\t\tborder-yellow-200/40 ring-2 ring-black h-0 w-0 rounded-full\"\r\n\t\t\t/>\r\n\t\t</slot>\r\n\t{/if}\r\n</div>\r\n","// get data nodes value from matching node.id\r\nexport const generateLinkLabel = (nodes, sourceID, targetID = false) => {\r\n\tif (!nodes) return '';\r\n\tconst match = nodes.find((el) => el.id == sourceID);\r\n\tif (!match || !match.value) return '';\r\n\tif (!targetID) return match.value + ' to';\r\n\r\n\tconst match2 = nodes.find((el) => el.id == targetID);\r\n\tif (!match2) return match.value;\r\n\treturn `${match.value} to ${match2.value}`;\r\n};\r\n\r\nexport function lineSegmentIntersection(p0_x, p0_y, p1_x, p1_y, p2_x, p2_y, p3_x, p3_y) {\r\n\tconst s1_x = p1_x - p0_x;\r\n\tconst s1_y = p1_y - p0_y;\r\n\tconst s2_x = p3_x - p2_x;\r\n\tconst s2_y = p3_y - p2_y;\r\n\r\n\tconst t = (s2_x * (p0_y - p2_y) - s2_y * (p0_x - p2_x)) / (-s2_x * s1_y + s1_x * s2_y);\r\n\tif (t >= 0 && t <= 1) {\r\n\t\treturn [p0_x + t * s1_x, p0_y + t * s1_y];\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\n// get dimensions from link and canvas\r\nexport function getDims(link) {\r\n\tlet sourceEl = document.getElementById(link.source.id);\r\n\tlet targetEl = document.getElementById(link.target.id);\r\n\t// get closest data-canvas to source and target\r\n\tlet canvasEl = sourceEl.closest('[data-canvas]');\r\n\r\n\tif (!sourceEl || !targetEl) return;\r\n\r\n\tlet source = getCoords(sourceEl);\r\n\tlet target = getCoords(targetEl);\r\n\tlet canvas = getCoords(canvasEl);\r\n\r\n\tx0 = (source.left - canvas.left) / scale;\r\n\ty0 = (source.top - canvas.top) / scale;\r\n\tx1 = (target.left - canvas.left) / scale;\r\n\ty1 = (target.top - canvas.top) / scale;\r\n\r\n\tw0 = (source.right - source.left) / scale;\r\n\th0 = (source.bottom - source.top) / scale;\r\n\tw1 = (target.right - target.left) / scale;\r\n\th1 = (target.bottom - target.top) / scale;\r\n\r\n\treturn {\r\n\t\tx0,\r\n\t\ty0,\r\n\t\tw0,\r\n\t\th0,\r\n\t\tx1,\r\n\t\ty1,\r\n\t\tw1,\r\n\t\th1\r\n\t};\r\n}\r\n","export const MARKER = 'marker';\r\nexport const CANVAS = 'canvas';\r\nexport const DROPZONE = 'connectabledropzone';\r\nexport const DELEGATOR = 'connectdelegator';\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\t// Data update Event options:\r\n\t/**\r\n\t * 1. dispatch event to Parent\r\n\t * 2. dispatch event to node via directive\r\n\t * 3. bind the data through a prop\r\n\t */\r\n\timport { createEventDispatcher } from 'svelte';\r\n\timport PointerTracker from '@douganderson444/pointer-tracker';\r\n\timport { nanoid } from 'nanoid/non-secure';\r\n\r\n\timport CursorMarker from './CursorMarker.svelte';\r\n\timport Links from './Links.svelte';\r\n\timport Highlighter from './Highlighter.svelte';\r\n\timport { generateLinkLabel } from '../utils.js';\r\n\timport { DROPZONE, MARKER } from '../constants.js';\r\n\r\n\texport let data;\r\n\texport let scale = 1;\r\n\texport let opts = {};\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet highlighters = {};\r\n\r\n\tlet canvas;\r\n\tlet connecting;\r\n\tlet marker = null;\r\n\tlet tempLink = null; // connecting, temp link from node to marker\r\n\r\n\tlet left = 0;\r\n\tlet top = 0;\r\n\r\n\tfunction connectable(node, options) {\r\n\t\tif (!node.id) node.id = nanoid();\r\n\r\n\t\t// set `data-no-pan` to true to disable panning on this node using panzoom-node, https://www.npmjs.com/package/@douganderson444/panzoom-node\r\n\t\tif (!node.dataset.noPan) node.dataset.noPan = true;\r\n\r\n\t\t// source id can be either data-sourceid or node.id\r\n\t\tlet sourceid = node?.dataset?.sourceid ? node?.dataset?.sourceid : node.id;\r\n\r\n\t\t// TODO: Handle absolute nodes, create a relative child?\r\n\t\tif (\r\n\t\t\t!node.style.position ||\r\n\t\t\t(node.style.position !== 'absolute' && node.style.position !== 'relative')\r\n\t\t)\r\n\t\t\tnode.style.position = 'relative';\r\n\r\n\t\tlet highlight = false;\r\n\t\tlet overZone;\r\n\r\n\t\t// add to list of nodes to highlight when connecting\r\n\t\thighlighters[sourceid] = { node, highlight };\r\n\r\n\t\t// Applying Restrictions\r\n\t\t// limit source count (single, multiples), target count, etc. # of connections per connectable\r\n\t\tlet pointerTracker;\r\n\t\tlet startPoint;\r\n\r\n\t\t// if there is a startPoint, then add that to the nodeElement\r\n\t\tif (options?.startPoint?.component) {\r\n\t\t\t// startPoint is a svelte component which is mounted to the node as target\r\n\t\t\t// and is used to start the connection\r\n\t\t\tstartPoint = new options.startPoint.component({\r\n\t\t\t\ttarget: node,\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tshow: options.startPoint?.show || true\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstartPoint.$on('ready', (event) => createPointerTracker(node, event.detail.handle));\r\n\t\t\tstartPoint.$set({ mounted: true }); // trigger the event fire to the listener above\r\n\t\t} else {\r\n\t\t\t// if no startPoint, then add the whole node as the startPoint\r\n\t\t\tcreatePointerTracker(node);\r\n\t\t}\r\n\r\n\t\t// Add data-* attriutes to connectable node\r\n\t\tif (options?.dataset) node.dataset.dataset = JSON.stringify(options.dataset);\r\n\r\n\t\tif (!options?.restrictions?.startOnly) node.dataset[DROPZONE] = true;\r\n\r\n\t\tfunction createPointerTracker(node, handle = false) {\r\n\t\t\tif (!options?.restrictions?.dropOnly) {\r\n\t\t\t\tpointerTracker = new PointerTracker(node, {\r\n\t\t\t\t\tstart(pointer, event) {\r\n\t\t\t\t\t\t// track only 1 pointer at a time\r\n\t\t\t\t\t\tif (pointerTracker.currentPointers.length >= 1) return false;\r\n\r\n\t\t\t\t\t\t// if (options?.startPoint) constrain connectable to only this child element\r\n\t\t\t\t\t\tif (options?.startPoint && event.target !== handle && !handle.contains(event.target))\r\n\t\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t\tconnecting = true;\r\n\t\t\t\t\t\tevent.stopPropagation(); // affect this event target only, not the ones below it\r\n\t\t\t\t\t\tevent.preventDefault(); // prevents scrolling whilst dragging\r\n\r\n\t\t\t\t\t\tleft = (pointer.pageX - canvas.getBoundingClientRect().left - window.scrollX) / scale;\r\n\t\t\t\t\t\ttop = (pointer.pageY - canvas.getBoundingClientRect().top - window.scrollY) / scale;\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmove(previousPointers, changedPointers, event) {\r\n\t\t\t\t\t\tevent.stopPropagation(); // afftect this event target only, not the ones below it\r\n\t\t\t\t\t\tevent.preventDefault(); // prevents scrolling whilst dragging\r\n\t\t\t\t\t\tleft =\r\n\t\t\t\t\t\t\tleft + (pointerTracker.currentPointers[0].pageX - previousPointers[0].pageX) / scale;\r\n\t\t\t\t\t\ttop =\r\n\t\t\t\t\t\t\ttop + (pointerTracker.currentPointers[0].pageY - previousPointers[0].pageY) / scale;\r\n\r\n\t\t\t\t\t\ttempLink = {\r\n\t\t\t\t\t\t\tid: sourceid + '-to-',\r\n\t\t\t\t\t\t\tsource: { id: sourceid, startPoint: options?.startPoint || false },\r\n\t\t\t\t\t\t\ttarget: { id: MARKER },\r\n\t\t\t\t\t\t\topts: {\r\n\t\t\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\t\t\t\tvalue: generateLinkLabel(data?.nodes, sourceid)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// unhightlight prev\r\n\t\t\t\t\t\tif (overZone) highlighters[overZone.id].highlight = false;\r\n\r\n\t\t\t\t\t\t// simulate mouseover for mobile\r\n\t\t\t\t\t\toverZone =\r\n\t\t\t\t\t\t\tdocument\r\n\t\t\t\t\t\t\t\t.elementFromPoint(\r\n\t\t\t\t\t\t\t\t\tpointerTracker.currentPointers[0].clientX,\r\n\t\t\t\t\t\t\t\t\tpointerTracker.currentPointers[0].clientY\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t?.closest(`[data-${DROPZONE}]`) || null;\r\n\r\n\t\t\t\t\t\tif (overZone?.id) {\r\n\t\t\t\t\t\t\thighlighters[overZone.id].highlight = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tend: (pointer, event, cancelled) => {\r\n\t\t\t\t\t\tmarker.style.display = 'none'; // so elementFromPoint gets what is underneath instead\r\n\t\t\t\t\t\t// marker = null; // this may be overkill?\r\n\r\n\t\t\t\t\t\tconnecting = false;\r\n\r\n\t\t\t\t\t\t// reset\r\n\t\t\t\t\t\tif (highlighters && overZone && overZone.id && highlighters[overZone.id].highlight) {\r\n\t\t\t\t\t\t\thighlighters[overZone.id].highlight = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toverZone = null;\r\n\r\n\t\t\t\t\t\t// get closest drop zone target\r\n\t\t\t\t\t\tlet drop = document.elementFromPoint(pointer.clientX, pointer.clientY);\r\n\t\t\t\t\t\tlet zone = drop?.closest(`[data-${DROPZONE}]`);\r\n\r\n\t\t\t\t\t\t// remove temp tempLink\r\n\t\t\t\t\t\ttempLink = null;\r\n\r\n\t\t\t\t\t\tif (!zone || !zone?.id || !node || !node?.id) return;\r\n\r\n\t\t\t\t\t\t// if data.links already contains this link.id, return\r\n\t\t\t\t\t\tif (data?.links?.find((link) => link?.id === sourceid + '-to-' + zone.id)) return;\r\n\r\n\t\t\t\t\t\t// ensure sourceid is not the same as targetid\r\n\t\t\t\t\t\tif (sourceid === zone.id) return;\r\n\r\n\t\t\t\t\t\t// update links\r\n\t\t\t\t\t\tconst newLink = {\r\n\t\t\t\t\t\t\tid: sourceid + '-to-' + zone.id,\r\n\t\t\t\t\t\t\tsource: { id: sourceid, startPoint: options?.startPoint || false },\r\n\t\t\t\t\t\t\ttarget: { id: zone.id },\r\n\t\t\t\t\t\t\topts: {\r\n\t\t\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\t\t\t\tvalue: generateLinkLabel(data?.nodes, sourceid, zone.id)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tdata.links = [...data.links, newLink];\r\n\r\n\t\t\t\t\t\t// emit data via event\r\n\t\t\t\t\t\tif (options?.dataset || zone?.dataset?.dataset) {\r\n\t\t\t\t\t\t\tconst detail = {\r\n\t\t\t\t\t\t\t\tsource: { dataset: options?.dataset || null },\r\n\t\t\t\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\t\t\t\tdataset: zone?.dataset?.dataset ? JSON.parse(zone.dataset.dataset) : null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tdispatch('connected', detail);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tavoidPointerEvents: true, // mkaes mobile work better\r\n\t\t\t\t\teventListenerOptions: {\r\n\t\t\t\t\t\tcapture: true, // capture the event and stop stopPropagation, so it doesn't bubble up to the parent\r\n\t\t\t\t\t\tpassive: false\r\n\t\t\t\t\t} // passive: false if no need to evt.preventDefault\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tupdate(params) {\r\n\t\t\t\t// the value of `params` has changed\r\n\t\t\t\toptions = params;\r\n\t\t\t\tif (startPoint) startPoint.$set({ show: options?.startPoint?.show || true }); // default to true if no show value is passed\r\n\t\t\t},\r\n\r\n\t\t\tdestroy() {\r\n\t\t\t\t// the node has been removed from the DOM\r\n\t\t\t\tpointerTracker?.stop();\r\n\t\t\t\tif (startPoint) startPoint.$destroy();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tconst removeLink = (e) => (data.links = data.links.filter((l) => l.id !== e.detail));\r\n</script>\r\n\r\n<svelte:window\r\n\ton:resize={(e) => {\r\n\t\tdata.links = data.links;\r\n\t}}\r\n/>\r\n\r\n<div bind:this={canvas} data-canvas style:position=\"relative\" style:height={'100%'}>\r\n\t{#if connecting}\r\n\t\t<!-- Show where the mouse/touch pointer is -->\r\n\t\t<CursorMarker bind:marker {left} {top} id={MARKER}>\r\n\t\t\t<slot name=\"marker\">\r\n\t\t\t\t<!-- Default cursor indicator marker below can be overriden in Parent Component slot -->\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"h-4 w-4 md:h-16 md:w-16 p-8 rounded-full shadow-xl opacity-80 select-none border-[1em] md:border-[1em]\"\r\n\t\t\t\t/>\r\n\t\t\t</slot>\r\n\t\t</CursorMarker>\r\n\t{/if}\r\n\r\n\t{#if canvas && connectable}\r\n\t\t<!-- The area where the connectable directive may be used (the \"let: connectable\" area) -->\r\n\t\t<slot {connectable} />\r\n\t{/if}\r\n\r\n\t<!-- TODO: Tempoary Link while connecting -->\r\n\t{#if tempLink}\r\n\t\t<Links links={[tempLink]} {...opts?.links} {scale} />\r\n\t{/if}\r\n\t<!-- All connected links (\"permanent\") -->\r\n\t{#if data?.links && data.links.length > 0}\r\n\t\t<Links links={data.links} {...opts?.links} {scale} on:removeLink={removeLink} />\r\n\t{/if}\r\n\r\n\t<!-- highlighters -->\r\n\t{#each [...Object.entries(highlighters)] as [nodeid, { node, highlight }]}\r\n\t\t<Highlighter {node} {highlight} />\r\n\t{/each}\r\n</div>\r\n\r\n<style lang=\"postcss\"></style>\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n\t// @ts-nocheck\r\n\r\n\t// The delegated start point component is on the top right hand side of the parent element\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n\t// export let sx; // starting x\r\n\t// export let sy; // starting y\r\n\t// export let ex = 0; // ending x\r\n\t// export let ey = 0;\r\n\texport let as; // angle start\r\n\r\n\texport let mounted = false;\r\n\texport let show = true; // boolean toggle whether to show the resizer handle or not\r\n\r\n\tlet handle; // bind this var to your custom handle\r\n\tlet offsetWidth;\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet x = 0;\r\n\tlet y = 0;\r\n\r\n\t$: if (mounted && handle && handle?.parentNode?.offsetWidth) {\r\n\t\tx = handle?.parentNode.offsetWidth; // initialize position to far right corner\r\n\t\tdispatch('ready', { handle }); // let the parent know we're ready to track\r\n\t}\r\n\r\n\t$: y = handle && as > 0 ? -handle?.offsetHeight : 0; // above if on top\r\n\t$: if (handle && handle.style && !!as) {\r\n\t\tif (as < 0.6 && as > -0.6) {\r\n\t\t\thandle.style.transform = `translate(-100%, 0)`;\r\n\t\t\thandle.style.right = null;\r\n\t\t} else {\r\n\t\t\thandle.style.transform = null;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n{#if show}\r\n\t<div\r\n\t\tbind:this={handle}\r\n\t\tbind:offsetWidth\r\n\t\tstyle=\"position: absolute; right: 0px; top:{y}px; user-select: none; cursor: pointer; font-family: monospace; padding: 0.25rem\"\r\n\t>\r\n\t\t<slot\r\n\t\t\t>Connect→\r\n\t\t\t<!-- {as.toFixed(1) || 0}° @ {x.toFixed(0)}, {y.toFixed(0)} -->\r\n\t\t</slot>\r\n\t</div>\r\n{/if}\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n\timport Delegate from './Delegate.svelte';\r\n\texport let mounted = false;\r\n\texport let as = 0; // pass angle start if your Component depends on the angle of the arrow\r\n\texport let sx = 0; // adjust label left/right of the Component\r\n\texport let sy = 0;\r\n</script>\r\n\r\n<Delegate {mounted} {as} {sx} {sy} on:ready>Connect Me</Delegate>\r\n","// @ts-nocheck\r\nimport PointerTracker from '@douganderson444/pointer-tracker';\r\n\r\nexport function grabable(\r\n\tnodeEl,\r\n\t{ nodeData = {}, removeCurrentNode = () => null, scale = 1 } = {}\r\n) {\r\n\tlet top = 0;\r\n\tlet left = 0;\r\n\r\n\tlet shiftX;\r\n\tlet shiftY;\r\n\r\n\tlet pointerTracker = new PointerTracker(nodeEl, {\r\n\t\tstart(pointer, event) {\r\n\t\t\tleft = null;\r\n\t\t\ttop = null;\r\n\t\t\t// if (event.target !== nodeEl && event.target.parentNode !== nodeEl) return false; // only move the top HTML Node\r\n\t\t\tif (event.target instanceof HTMLInputElement || event.target.isContentEditable) return false; // skip editable elements\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\r\n\t\t\tnodeEl.dispatchEvent(\r\n\t\t\t\tnew CustomEvent('started', {\r\n\t\t\t\t\tdetail: {}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\t// capture the inital pointer offset within the event target\r\n\t\t\tshiftX = event.clientX - nodeEl.getBoundingClientRect().left || 0;\r\n\t\t\tshiftY = event.clientY - nodeEl.getBoundingClientRect().top || 0;\r\n\r\n\t\t\t// get current position\r\n\t\t\tleft = parseFloat(getComputedStyle(nodeEl)['left'].replace('px', '')) || 0;\r\n\t\t\ttop = parseFloat(getComputedStyle(nodeEl)['top'].replace('px', '')) || 0;\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tmove(previousPointers, changedPointers, event) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\r\n\t\t\tnodeEl.style.cursor = 'grabbing';\r\n\r\n\t\t\t// auto scroll at edges\r\n\t\t\tif (pointerTracker.currentPointers[0].clientY > document.body.clientHeight - 20)\r\n\t\t\t\twindow.scrollBy(0, 20);\r\n\r\n\t\t\tif (pointerTracker.currentPointers[0].clientY < 20) window.scrollBy(0, -20);\r\n\t\t\tif (pointerTracker.currentPointers[0].clientX > document.body.clientWidth - 20)\r\n\t\t\t\twindow.scrollBy(20, 0);\r\n\r\n\t\t\tif (pointerTracker.currentPointers[0].clientX < 20) window.scrollBy(-20, 0);\r\n\r\n\t\t\tleft = left + (pointerTracker.currentPointers[0].pageX - previousPointers[0].pageX) / scale;\r\n\t\t\ttop = top + (pointerTracker.currentPointers[0].pageY - previousPointers[0].pageY) / scale;\r\n\r\n\t\t\tnodeData.x = left;\r\n\t\t\tnodeData.y = top;\r\n\r\n\t\t\t// update position in node Element\r\n\t\t\t// if not over dropzone\r\n\t\t\tnodeEl.dispatchEvent(\r\n\t\t\t\tnew CustomEvent('move', {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t...nodeData,\r\n\t\t\t\t\t\tx: left,\r\n\t\t\t\t\t\ty: top,\r\n\t\t\t\t\t\toverDropZone: overDropZone(pointerTracker.currentPointers[0])\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\tend(pointer, event, cancelled) {\r\n\t\t\t// temporarily reset to original position so you can get elementFromPoint underneath it\r\n\t\t\tnodeEl.style.left = 0;\r\n\t\t\tnodeEl.style.top = 0;\r\n\r\n\t\t\tlet zone = document\r\n\t\t\t\t.elementFromPoint(pointer.clientX, pointer.clientY)\r\n\t\t\t\t?.closest('[data-dropzone]');\r\n\r\n\t\t\tnodeEl.style.cursor = 'auto';\r\n\r\n\t\t\t// handle dropped on self (no data-dropzone found)\r\n\t\t\tif (!overDropZone(pointer, zone)) {\r\n\t\t\t\t// console.log('dropped on self');\r\n\t\t\t\t// handle relative drop on self,\r\n\t\t\t\tnodeEl?.dispatchEvent(\r\n\t\t\t\t\tnew CustomEvent('end', {\r\n\t\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t\t...nodeData,\r\n\t\t\t\t\t\t\t// set left and top back to last position since it was cleared (above)\r\n\t\t\t\t\t\t\tx: left,\r\n\t\t\t\t\t\t\ty: top\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// remove from old parent\r\n\t\t\tremoveCurrentNode();\r\n\r\n\t\t\t// add to new zone\r\n\t\t\tzone.dispatchEvent(\r\n\t\t\t\tnew CustomEvent('addChild', {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tnodeData: {\r\n\t\t\t\t\t\t\t...nodeData,\r\n\t\t\t\t\t\t\tx: pointer.clientX - shiftX - zone.getBoundingClientRect().left,\r\n\t\t\t\t\t\t\ty: pointer.clientY - shiftY - zone.getBoundingClientRect().top\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\tavoidPointerEvents: true,\r\n\t\teventListenerOptions: { capture: false }\r\n\t});\r\n\r\n\tfunction overDropZone(pointer, zone = null) {\r\n\t\tif (!zone)\r\n\t\t\tzone = document\r\n\t\t\t\t.elementFromPoint(pointer.clientX, pointer.clientY)\r\n\t\t\t\t?.closest('[data-dropzone]');\r\n\r\n\t\t// nodeEl is grabable <Node>\r\n\t\t// zone is <Group> dropzone\r\n\t\t// each <Node> has a parent that is a <Group> dropzone\r\n\t\t// if <Node> is dropped on current <Group> dropzone, return false\r\n\t\treturn (\r\n\t\t\t!!zone && // dropzone exists\r\n\t\t\tzone != nodeEl && // not dropped on self\r\n\t\t\tzone.parentNode != nodeEl && // not dropped on parent\r\n\t\t\tzone.parentNode?.id != nodeEl?.id && // sometime nodeEl disappeara and is removed from the DOM\r\n\t\t\t!nodeEl.contains(zone) &&\r\n\t\t\tzone != nodeEl.parentNode.closest('[data-dropzone]') // not dropped on current zone\r\n\t\t);\r\n\t}\r\n\r\n\treturn {\r\n\t\tupdate(params) {\r\n\t\t\t// the value of `bar` has changed\r\n\t\t\t({ nodeData, removeCurrentNode = () => null, scale = 1 } = params);\r\n\t\t},\r\n\r\n\t\tdestroy() {\r\n\t\t\t// the node has been removed from the DOM\r\n\t\t\tpointerTracker.stop();\r\n\t\t}\r\n\t};\r\n}\r\n"],"names":["ctx","linear","now","create_if_block_3","create_if_block_1","_c","_b","_a","_f","_e","_d","create_if_block_2","create_if_block","link","node"],"mappings":"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"}